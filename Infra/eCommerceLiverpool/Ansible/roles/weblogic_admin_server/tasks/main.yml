

- name: "Print default variables"
  debug: 
    msg:
      - 'Default Variables :'
      - ""
      - 'DOMAIN_NAME: {{DOMAIN_NAME}}'
      - 'DOMAIN_HOME: {{DOMAIN_HOME}}' 
      - 'MS_NAME: {{MS_NAME}}'
      - 'NM_NAME: {{NM_NAME}}'
      - 'ADMIN_PASSWORD: {{ADMIN_PASSWORD}}'
      - 'NM_DIR: {{NM_DIR}}'
      - 'NODEMGR_HOME_STR: {{NODEMGR_HOME_STR}}'
      - 'DOMAINSFILE_STR: {{DOMAINSFILE_STR}}'
      - 'NODEMGRHOME_STR: {{NODEMGRHOME_STR}}'
      - 'LOGFILE_STR: {{LOGFILE_STR}}'

- name: Validate if  AdminServer is UP
  wait_for:
    host: 'AdminServer-eCommerce-liverpool-Prd'
    port: 7001
    delay: 10
    state: started


- name: Validate if node manager already exits (/u01/oracle/log_{{MS_NAME}}.nm)
  stat:
    path: /u01/oracle/log_{{MS_NAME}}.nm
  register: NM_exists

- debug: msg="{{NM_exists}}"


- block: 

  - name: Create the node  dir {{NM_DIR}}
    shell: 'mkdir -p {{NM_DIR}}'

  - name: Copy node manager files to node
    shell: 'cp {{DOMAIN_HOME}}/bin/startNodeManager.sh {{NM_DIR}} && cp -r {{DOMAIN_HOME}}/nodemanager/* {{NM_DIR}} '

  - name: Configure node manager shell file & propreties file for this node
    shell: 'sed -i -e "s|NODEMGR_HOME\=.*$|{{NODEMGR_HOME_STR}}|g" {{NM_DIR}}/startNodeManager.sh && sed -i -e "s|DomainsFile\=.*$|{{DOMAINSFILE_STR}}|g" {{NM_DIR}}/nodemanager.properties && sed -i -e "s|NodeManagerHome\=.*$|[{{NODEMGRHOME_STR}}|g" {{NM_DIR}}/nodemanager.properties && sed -i -e "s|LogFile=$|$LOGFILE_STR|g" {{NM_DIR}}/nodemanager.properties'

  - name: Start the node manager on this host 
    shell: nohup {{NM_DIR}}/startNodeManager.sh > /u01/oracle/log_{{MS_NAME}}.nm 2>&1 &
    register: nm_start 
  
  - name: print start
    debug: msg={{nm_start}}

  - name: Copy srcipts for Oracle WebLogic Managed Server creation
    copy: 
      src={{ item.0 }} 
      dest={{ item.1 }}
      mode={{ item.2 }}
    with_together:
      - [ 'add-machine.py',
          'add-server.py'  
        ]
      - [ '/u01/oracle/', 
          '/u01/oracle/'
        ]
      - [ 'u+rwx,g+rwx,o+rwx', 
          'u+rwx,g+rwx,o+rwx'
        ]

  


  - name: Generate commonfuncs.py
    template:
      src=commonfuncs.j2
      dest=u01/oracle/commonfuncs.py


  - name: Run the Machine Creation WLST Script  
    shell: wlst.sh -skipWLSModuleScanning /u01/oracle/add-machine.py
    environment:
      USER_MEM_ARGS: "-Djava.security.egd=file:/dev/./urandom"
      PATH: "{{ ansible_env.PATH }}:/u01/oracle/oracle_common/common/bin:/u01/oracle/wlserver/common/bin"
    register: Machine_Creation_WLST_Script

  - name: Run the Server Creation WLST Script  
    shell: wlst.sh -skipWLSModuleScanning /u01/oracle/add-server.py
    environment:
      USER_MEM_ARGS: "-Djava.security.egd=file:/dev/./urandom"
      PATH: "{{ ansible_env.PATH }}:/u01/oracle/oracle_common/common/bin:/u01/oracle/wlserver/common/bin"
    register: Server_Creation_WLST_Script

  when: NM_exists.stat.exists == false
